from collections import defaultdict
RADIUS = 9
RANGE = range(-RADIUS, RADIUS + 1)

def sub(v1, v2):
    return (v1[0] - v2[0], v1[1] - v2[1])

def add(v1, v2):
    return (v1[0] + v2[0], v1[1] + v2[1])

def rot90(v):
    return (-v[1], v[0])

def debugprint_map(vecs):
    DIAMETER = RADIUS * 2 + 1
    map_ = [["."] * DIAMETER for _ in RANGE]
    for x, y in vecs:
        map_[y + RADIUS][x + RADIUS] = "*"
    print
    print "\n".join("".join(line) for line in map_)
    print

count = defaultdict(int)
c = 0
# nw : north west
for center_x in RANGE:
    for nw_corner_x in RANGE:
        if center_x < nw_corner_x: break
        for center_y in RANGE:
            for nw_corner_y in RANGE:
                if center_y <= nw_corner_y: break
                center = (center_x, center_y)
                nw = (nw_corner_x, nw_corner_y)
                diff = sub(nw, center)
                r90diff = rot90(diff)
                ne = add(center, r90diff)
                if ne[0] > RADIUS: continue
                if ne[1] < -RADIUS: continue
                r180diff = rot90(r90diff)
                se = add(center, r180diff)
                if se[0] > RADIUS: continue
                if se[1] > RADIUS: continue
                r270diff = rot90(r180diff)
                sw = add(center, r270diff)
                if sw[0] < -RADIUS: continue
                if sw[1] > RADIUS: continue

                #debugprint_map([center, nw, ne, se, sw])
                if 0:
                    for v in [center, nw, ne, se, sw]:
                        count[v] += 1
                elif 0:
                    if (0, 0) in [center, nw, ne, se, sw]:
                        for v in [center, nw, ne, se, sw]:
                            count[v] += 1
                else:
                    if (0, 0) not in [center, nw, ne, se, sw]:
                        for v in [center, nw, ne, se, sw]:
                            count[v] += 1
                    else:
                        for v in [center, nw, ne, se, sw]:
                            count[v] -= 1
                c += 1

print "total baika", c
print "\n".join(",".join("%3d" % count[(x, y)] for x in RANGE) for y in RANGE)

"""
  1,  1,  1
  1,  2,  1
  1,  1,  1

  2,  3,  4,  3,  2
  3,  5,  7,  5,  3
  4,  7, 14,  7,  4
  3,  5,  7,  5,  3
  2,  3,  4,  3,  2

  9, 17, 25, 31, 37, 41, 45, 47, 49, 49, 49, 47, 45, 41, 37, 31, 25, 17,  9
 17, 26, 35, 40, 47, 50, 55, 56, 59, 58, 59, 56, 55, 50, 47, 40, 35, 26, 17
 25, 35, 49, 53, 61, 63, 69, 69, 73, 71, 73, 69, 69, 63, 61, 53, 49, 35, 25
 31, 40, 53, 62, 71, 72, 79, 78, 83, 80, 83, 78, 79, 72, 71, 62, 53, 40, 31
 37, 47, 61, 71, 89, 89, 97, 95,101, 97,101, 95, 97, 89, 89, 71, 61, 47, 37
 41, 50, 63, 72, 89, 98,107,104,111,106,111,104,107, 98, 89, 72, 63, 50, 41
 45, 55, 69, 79, 97,107,129,125,133,127,133,125,129,107, 97, 79, 69, 55, 45
 47, 56, 69, 78, 95,104,125,134,143,136,143,134,125,104, 95, 78, 69, 56, 47
 49, 59, 73, 83,101,111,133,143,169,161,169,143,133,111,101, 83, 73, 59, 49
 49, 58, 71, 80, 97,106,127,136,161,170,161,136,127,106, 97, 80, 71, 58, 49
 49, 59, 73, 83,101,111,133,143,169,161,169,143,133,111,101, 83, 73, 59, 49
 47, 56, 69, 78, 95,104,125,134,143,136,143,134,125,104, 95, 78, 69, 56, 47
 45, 55, 69, 79, 97,107,129,125,133,127,133,125,129,107, 97, 79, 69, 55, 45
 41, 50, 63, 72, 89, 98,107,104,111,106,111,104,107, 98, 89, 72, 63, 50, 41
 37, 47, 61, 71, 89, 89, 97, 95,101, 97,101, 95, 97, 89, 89, 71, 61, 47, 37
 31, 40, 53, 62, 71, 72, 79, 78, 83, 80, 83, 78, 79, 72, 71, 62, 53, 40, 31
 25, 35, 49, 53, 61, 63, 69, 69, 73, 71, 73, 69, 69, 63, 61, 53, 49, 35, 25
 17, 26, 35, 40, 47, 50, 55, 56, 59, 58, 59, 56, 55, 50, 47, 40, 35, 26, 17
  9, 17, 25, 31, 37, 41, 45, 47, 49, 49, 49, 47, 45, 41, 37, 31, 25, 17,  9

  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
  1,  2,  1,  2,  1,  2,  1,  2,  1,  4,  1,  2,  1,  2,  1,  2,  1,  2,  1
  1,  1,  1,  1,  1,  1,  1,  1,  3,  1,  3,  1,  1,  1,  1,  1,  1,  1,  1
  1,  2,  1,  2,  1,  2,  1,  4,  1,  4,  1,  4,  1,  2,  1,  2,  1,  2,  1
  1,  1,  1,  1,  1,  1,  3,  1,  3,  1,  3,  1,  3,  1,  1,  1,  1,  1,  1
  1,  2,  1,  2,  1,  5,  2,  5,  2,  5,  2,  5,  2,  5,  1,  2,  1,  2,  1
  1,  1,  1,  1,  3,  2,  4,  2,  4,  2,  4,  2,  4,  2,  3,  1,  1,  1,  1
  1,  2,  1,  4,  1,  5,  2,  5,  2,  5,  2,  5,  2,  5,  1,  4,  1,  2,  1
  1,  1,  3,  1,  3,  2,  4,  2,  4,  2,  4,  2,  4,  2,  3,  1,  3,  1,  1
  1,  4,  1,  4,  1,  5,  2,  5,  2,170,  2,  5,  2,  5,  1,  4,  1,  4,  1
  1,  1,  3,  1,  3,  2,  4,  2,  4,  2,  4,  2,  4,  2,  3,  1,  3,  1,  1
  1,  2,  1,  4,  1,  5,  2,  5,  2,  5,  2,  5,  2,  5,  1,  4,  1,  2,  1
  1,  1,  1,  1,  3,  2,  4,  2,  4,  2,  4,  2,  4,  2,  3,  1,  1,  1,  1
  1,  2,  1,  2,  1,  5,  2,  5,  2,  5,  2,  5,  2,  5,  1,  2,  1,  2,  1
  1,  1,  1,  1,  1,  1,  3,  1,  3,  1,  3,  1,  3,  1,  1,  1,  1,  1,  1
  1,  2,  1,  2,  1,  2,  1,  4,  1,  4,  1,  4,  1,  2,  1,  2,  1,  2,  1
  1,  1,  1,  1,  1,  1,  1,  1,  3,  1,  3,  1,  1,  1,  1,  1,  1,  1,  1
  1,  2,  1,  2,  1,  2,  1,  2,  1,  4,  1,  2,  1,  2,  1,  2,  1,  2,  1
  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
 
  8, 16, 24, 30, 36, 40, 44, 46, 48, 48, 48, 46, 44, 40, 36, 30, 24, 16,  8
 16, 24, 34, 38, 46, 48, 54, 54, 58, 54, 58, 54, 54, 48, 46, 38, 34, 24, 16
 24, 34, 48, 52, 60, 62, 68, 68, 70, 70, 70, 68, 68, 62, 60, 52, 48, 34, 24
 30, 38, 52, 60, 70, 70, 78, 74, 82, 76, 82, 74, 78, 70, 70, 60, 52, 38, 30
 36, 46, 60, 70, 88, 88, 94, 94, 98, 96, 98, 94, 94, 88, 88, 70, 60, 46, 36
 40, 48, 62, 70, 88, 93,105, 99,109,101,109, 99,105, 93, 88, 70, 62, 48, 40
 44, 54, 68, 78, 94,105,125,123,129,125,129,123,125,105, 94, 78, 68, 54, 44
 46, 54, 68, 74, 94, 99,123,129,141,131,141,129,123, 99, 94, 74, 68, 54, 46
 48, 58, 70, 82, 98,109,129,141,165,159,165,141,129,109, 98, 82, 70, 58, 48
 48, 54, 70, 76, 96,101,125,131,159,  0,159,131,125,101, 96, 76, 70, 54, 48
 48, 58, 70, 82, 98,109,129,141,165,159,165,141,129,109, 98, 82, 70, 58, 48
 46, 54, 68, 74, 94, 99,123,129,141,131,141,129,123, 99, 94, 74, 68, 54, 46
 44, 54, 68, 78, 94,105,125,123,129,125,129,123,125,105, 94, 78, 68, 54, 44
 40, 48, 62, 70, 88, 93,105, 99,109,101,109, 99,105, 93, 88, 70, 62, 48, 40
 36, 46, 60, 70, 88, 88, 94, 94, 98, 96, 98, 94, 94, 88, 88, 70, 60, 46, 36
 30, 38, 52, 60, 70, 70, 78, 74, 82, 76, 82, 74, 78, 70, 70, 60, 52, 38, 30
 24, 34, 48, 52, 60, 62, 68, 68, 70, 70, 70, 68, 68, 62, 60, 52, 48, 34, 24
 16, 24, 34, 38, 46, 48, 54, 54, 58, 54, 58, 54, 54, 48, 46, 38, 34, 24, 16
  8, 16, 24, 30, 36, 40, 44, 46, 48, 48, 48, 46, 44, 40, 36, 30, 24, 16,  8

  7, 15, 23, 29, 35, 39, 43, 45, 47, 47, 47, 45, 43, 39, 35, 29, 23, 15,  7
 15, 22, 33, 36, 45, 46, 53, 52, 57, 50, 57, 52, 53, 46, 45, 36, 33, 22, 15
 23, 33, 47, 51, 59, 61, 67, 67, 67, 69, 67, 67, 67, 61, 59, 51, 47, 33, 23
 29, 36, 51, 58, 69, 68, 77, 70, 81, 72, 81, 70, 77, 68, 69, 58, 51, 36, 29
 35, 45, 59, 69, 87, 87, 91, 93, 95, 95, 95, 93, 91, 87, 87, 69, 59, 45, 35
 39, 46, 61, 68, 87, 88,103, 94,107, 96,107, 94,103, 88, 87, 68, 61, 46, 39
 43, 53, 67, 77, 91,103,121,121,125,123,125,121,121,103, 91, 77, 67, 53, 43
 45, 52, 67, 70, 93, 94,121,124,139,126,139,124,121, 94, 93, 70, 67, 52, 45
 47, 57, 67, 81, 95,107,125,139,161,157,161,139,125,107, 95, 81, 67, 57, 47
 47, 50, 69, 72, 95, 96,123,126,157,  x,157,126,123, 96, 95, 72, 69, 50, 47
 47, 57, 67, 81, 95,107,125,139,161,157,161,139,125,107, 95, 81, 67, 57, 47
 45, 52, 67, 70, 93, 94,121,124,139,126,139,124,121, 94, 93, 70, 67, 52, 45
 43, 53, 67, 77, 91,103,121,121,125,123,125,121,121,103, 91, 77, 67, 53, 43
 39, 46, 61, 68, 87, 88,103, 94,107, 96,107, 94,103, 88, 87, 68, 61, 46, 39
 35, 45, 59, 69, 87, 87, 91, 93, 95, 95, 95, 93, 91, 87, 87, 69, 59, 45, 35
 29, 36, 51, 58, 69, 68, 77, 70, 81, 72, 81, 70, 77, 68, 69, 58, 51, 36, 29
 23, 33, 47, 51, 59, 61, 67, 67, 67, 69, 67, 67, 67, 61, 59, 51, 47, 33, 23
 15, 22, 33, 36, 45, 46, 53, 52, 57, 50, 57, 52, 53, 46, 45, 36, 33, 22, 15
  7, 15, 23, 29, 35, 39, 43, 45, 47, 47, 47, 45, 43, 39, 35, 29, 23, 15,  7
"""
